---
description:
globs:
alwaysApply: true
---
# CryptoPlay - Project Architecture

## Overview
CryptoPlay is a modern web application built with Next.js 15, leveraging the latest React features and a robust tech stack for cryptocurrency-related functionality.

## Tech Stack

### Core Framework
- **Next.js 15** - React framework with App Router
- **React 19** - Latest React with Server Components
- **TypeScript** - Type-safe development

### Styling & UI
- **Tailwind CSS v4** - Utility-first CSS framework
- **shadcn/ui** - Modern component library (New York style)
- **Lucide React** - Beautiful icon library
- **next-themes** - Theme switching support

### Forms & validation
- **React Hook Form** - Performant forms with minimal re-renders
- **Zod** - TypeScript-first schema validation
- **@hookform/resolvers** - Validation resolver integration

### Internationalization
- **next-international** - Type-safe i18n for Next.js

## Project Structure

```
crypto-play/
├── public/                    # Static assets
├── src/
│   ├── app/                   # Next.js App Router
│   │   └── [locale]/          # Internationalized routes
│   │       └── (auth)/        # Authentication route group
│   │           ├── login/     # Login page
│   │           └── register/  # Registration page
│   ├── components/            # Reusable components
│   │   ├── ui/               # shadcn/ui components
│   │   ├── theme-provider.tsx
│   │   └── footer.tsx
│   ├── lib/                  # Utility functions and configurations
│   └── locales/              # Internationalization
│       ├── en.ts            # English translations
│       ├── fr.ts            # French translations
│       ├── client.ts        # Client-side i18n
│       └── server.ts        # Server-side i18n
├── components.json           # shadcn/ui configuration
├── next.config.ts           # Next.js configuration
├── tailwind.config.ts       # Tailwind CSS configuration
└── tsconfig.json           # TypeScript configuration
```

## Routing Strategy

### App Router Architecture
- Uses Next.js 15 App Router for enhanced performance and developer experience
- File-based routing with layout composition
- Server and Client Components for optimal bundle splitting

### Internationalization Routing
- Dynamic `[locale]` segment for multi-language support
- Supported languages: English (en), French (fr)
- Type-safe translations with `next-international`

### Route Groups
- `(auth)` route group for authentication-related pages
- Organized routing without affecting URL structure

## Design System

### Component Architecture
- **shadcn/ui Components**: Pre-built, accessible components
- **Custom Components**: Project-specific components in `/components`
- **UI Components**: Base components in `/components/ui`

### Styling Approach
- **Utility-First**: Tailwind CSS for rapid development
- **Component Variants**: Using `class-variance-authority` for component variations
- **Theme Support**: Dark/light mode with `next-themes`
- **CSS Variables**: Dynamic theming support

### Icon System
- **Lucide React**: Consistent, modern icon library
- Tree-shakable imports for optimal bundle size

## Form Management

### Form Strategy
- **React Hook Form**: Performance-optimized form handling
- **Zod Validation**: TypeScript-first schema validation
- **Type Safety**: End-to-end type safety from schema to UI

## Internationalization

### i18n Architecture
- **Server-Side**: Pre-rendered translations for SEO
- **Client-Side**: Dynamic translation switching
- **Type Safety**: Full TypeScript support for translations
- **Fallback Strategy**: English as default fallback language

## Development Tools

### Code Quality
- **ESLint**: Code linting with Next.js recommended rules
- **TypeScript**: Strict type checking
- **PostCSS**: CSS processing with Tailwind

### Build System
- **Next.js Compiler**: Rust-based fast builds
- **Automatic Optimization**: Image optimization, code splitting
- **Server Components**: Enhanced performance with RSC

## Deployment Strategy

### Build Configuration
- **Static Generation**: Pre-built pages for optimal performance
- **Server Components**: Reduced client-side JavaScript
- **Code Splitting**: Automatic route-based splitting

## Future Considerations

### Scalability
- Component library expansion with shadcn/ui
- Additional authentication providers
- Database integration for user management
- API routes for cryptocurrency data

### Performance
- Image optimization with Next.js Image component
- Progressive Web App (PWA) capabilities
- Advanced caching strategies

### Features
- Real-time cryptocurrency data integration
- User dashboard and portfolio tracking
- Advanced charting and analytics
- Mobile-responsive design enhancement

## Key Dependencies

| Package | Version | Purpose |
|---------|---------|---------|
| next | ^15.3.2 | React framework |
| react | ^19.0.0 | UI library |
| tailwindcss | ^4.1.7 | CSS framework |
| next-international | ^1.3.1 | Internationalization |
| react-hook-form | ^7.54.2 | Form management |
| zod | ^3.25.7 | Schema validation |
| lucide-react | ^0.511.0 | Icons |
| next-themes | ^0.4.6 | Theme management |

---

*This architecture document should be updated as the project evolves and new features are added.*

